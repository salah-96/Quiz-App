{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Salah\\\\quiz-app\\\\src\\\\components\\\\Countdown\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Popup } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\nimport { timeConverter } from '../../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = ({\n  countdownTime,\n  timeOver,\n  setTimeTaken\n}) => {\n  _s();\n  const totalTime = countdownTime * 1000;\n  const [timerTime, setTimerTime] = useState(totalTime);\n  const {\n    hours,\n    minutes,\n    seconds\n  } = timeConverter(timerTime);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const newTime = timerTime - 1000;\n      if (newTime >= 0) {\n        setTimerTime(newTime);\n      } else {\n        clearInterval(timer);\n        Swal.fire({\n          icon: 'info',\n          title: `Oops! Time's up.`,\n          text: 'See how you did!',\n          confirmButtonText: 'Check Results',\n          timer: 5000,\n          willClose: () => timeOver(totalTime - timerTime)\n        });\n      }\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n      setTimeTaken(totalTime - timerTime + 1000);\n    };\n\n    // eslint-disable-next-line\n  }, [timerTime]);\n  return /*#__PURE__*/_jsxDEV(Button.Group, {\n    size: \"massive\",\n    basic: true,\n    floated: \"right\",\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      content: \"Hours\",\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        active: true,\n        children: hours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this),\n      position: \"bottom left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      content: \"Minutes\",\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        active: true,\n        children: minutes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 18\n      }, this),\n      position: \"bottom left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      content: \"Seconds\",\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        active: true,\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 18\n      }, this),\n      position: \"bottom left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"V3gSRhO1pJBevGSKDod+l4Euank=\");\n_c = Countdown;\nCountdown.propTypes = {\n  countdownTime: PropTypes.number.isRequired,\n  timeOver: PropTypes.func.isRequired,\n  setTimeTaken: PropTypes.func.isRequired\n};\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Button","Popup","Swal","timeConverter","jsxDEV","_jsxDEV","Countdown","countdownTime","timeOver","setTimeTaken","_s","totalTime","timerTime","setTimerTime","hours","minutes","seconds","timer","setInterval","newTime","clearInterval","fire","icon","title","text","confirmButtonText","willClose","Group","size","basic","floated","children","content","trigger","active","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","propTypes","number","isRequired","func","$RefreshReg$"],"sources":["C:/Users/Salah/quiz-app/src/components/Countdown/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Popup } from 'semantic-ui-react';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { timeConverter } from '../../utils';\r\n\r\nconst Countdown = ({ countdownTime, timeOver, setTimeTaken }) => {\r\n  const totalTime = countdownTime * 1000;\r\n  const [timerTime, setTimerTime] = useState(totalTime);\r\n  const { hours, minutes, seconds } = timeConverter(timerTime);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const newTime = timerTime - 1000;\r\n\r\n      if (newTime >= 0) {\r\n        setTimerTime(newTime);\r\n      } else {\r\n        clearInterval(timer);\r\n\r\n        Swal.fire({\r\n          icon: 'info',\r\n          title: `Oops! Time's up.`,\r\n          text: 'See how you did!',\r\n          confirmButtonText: 'Check Results',\r\n          timer: 5000,\r\n          willClose: () => timeOver(totalTime - timerTime),\r\n        });\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(timer);\r\n      setTimeTaken(totalTime - timerTime + 1000);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n  }, [timerTime]);\r\n\r\n  return (\r\n    <Button.Group size=\"massive\" basic floated=\"right\">\r\n      <Popup\r\n        content=\"Hours\"\r\n        trigger={<Button active>{hours}</Button>}\r\n        position=\"bottom left\"\r\n      />\r\n      <Popup\r\n        content=\"Minutes\"\r\n        trigger={<Button active>{minutes}</Button>}\r\n        position=\"bottom left\"\r\n      />\r\n      <Popup\r\n        content=\"Seconds\"\r\n        trigger={<Button active>{seconds}</Button>}\r\n        position=\"bottom left\"\r\n      />\r\n    </Button.Group>\r\n  );\r\n};\r\n\r\nCountdown.propTypes = {\r\n  countdownTime: PropTypes.number.isRequired,\r\n  timeOver: PropTypes.func.isRequired,\r\n  setTimeTaken: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Countdown;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}